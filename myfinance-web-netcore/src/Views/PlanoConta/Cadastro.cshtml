@model PlanoContaModel 

@{
    ViewData["Title"] = "Cadastro de Plano de Contas"; @** nesse caso o cód C# está manipulando o titulo da view *@
}


<h1>@ViewData["Title"]</h1>

<form asp-controller="PlanoConta" asp-action="Cadastro" method="post"> 
    <div class="container">
        <div class="mb-3">
            <label class="form-label">Descrição</label>
            <input type="hidden" id="txtId" class="form-control" asp-for="Id"> @*@ é esse carinha que é passado para a Função de Salvar *@
            <input type="text" id="txtNome" class="form-control" asp-for="Descricao">  
        </div>

        <div class="mb-3">
            <label>@Html.RadioButtonFor(m => m.Tipo, "D") Despesa</label>
            <label>@Html.RadioButtonFor(m => m.Tipo, "R") Receita</label>
        </div>

        <div class="mb-3">
            <button type="submit" class="btn btn-primary btn-lg">Salvar</button>
            <button type="button" class="btn btn-secondary btn-lg" onclick="Voltar()">Cancelar</button>
        </div>

    </div>
</form>

<script>
    function Voltar() {
        window.location.href = "../PlanoConta/Index";
    }
</script>

@*! CSHTML = possibilita escrever cód C# (back-end) junto com html (Front-end), todo cód C# que for adicionado deve estar dentor de @{} *@
@*@ Os formulários são enviados para a controladora *@
@*$ Esses "asp-for" sãoe funções lambida "(m => m.Tipo, "R")" são responsáveis por passar os valores que são processados em Salvar, editar e excluir  *@
